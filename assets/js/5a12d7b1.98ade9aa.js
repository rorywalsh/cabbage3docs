"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1596],{8242:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>m,default:()=>v,frontMatter:()=>b,metadata:()=>x,toc:()=>j});var r=n(4848),a=n(8453),s=n(3252),i=n(7838),o=n(7396),d=n(2301),c=n(1584),l=n(576),h=n(2882),u=n(634),p=n(1432);const g='<Cabbage>\r\n[\r\n    {\r\n        "type": "form",\r\n        "caption": "Slider Example",\r\n        "size": {"width": 360, "height": 460},\r\n        "guiMode": "queue",\r\n        "pluginId": "def2"\r\n    },\r\n    {\r\n        "type": "numberSlider",\r\n        "bounds": {"left": 20, "top": 20, "width": 80, "height": 20},\r\n        "channels": [\r\n            {\r\n                "id": "harmonic1",\r\n                "event": "valueChanged",\r\n                "range": {"min": 0, "max": 1, "defaultValue": 0, "skew": 1, "increment": 1}\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        "type": "numberSlider",\r\n        "bounds": {"left": 20, "top": 50, "width": 80, "height": 20},\r\n        "channels": [\r\n            {\r\n                "id": "harmonic2",\r\n                "event": "valueChanged",\r\n                "range": {"min": 0, "max": 1, "defaultValue": 0, "skew": 1, "increment": 1}\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        "type": "numberSlider",\r\n        "bounds": {"left": 20, "top": 80, "width": 80, "height": 20},\r\n        "channels": [\r\n            {\r\n                "id": "harmonic3",\r\n                "event": "valueChanged",\r\n                "range": {"min": 0, "max": 1, "defaultValue": 0, "skew": 1, "increment": 1}\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        "type": "numberSlider",\r\n        "bounds": {"left": 20, "top": 110, "width": 80, "height": 20},\r\n        "channels": [\r\n            {\r\n                "id": "harmonic4",\r\n                "event": "valueChanged",\r\n                "range": {"min": 0, "max": 1, "defaultValue": 0, "skew": 1, "increment": 1}\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        "type": "numberSlider",\r\n        "bounds": {"left": 20, "top": 140, "width": 80, "height": 20},\r\n        "channels": [\r\n            {\r\n                "id": "harmonic5",\r\n                "event": "valueChanged",\r\n                "range": {"min": 0, "max": 1, "defaultValue": 0, "skew": 1, "increment": 1}\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        "type": "numberSlider",\r\n        "bounds": {"left": 20, "top": 170, "width": 80, "height": 20},\r\n        "channels": [\r\n            {\r\n                "id": "harmonic6",\r\n                "event": "valueChanged",\r\n                "range": {"min": 0, "max": 1, "defaultValue": 0, "skew": 1, "increment": 1}\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        "type": "numberSlider",\r\n        "bounds": {"left": 20, "top": 200, "width": 80, "height": 20},\r\n        "channels": [\r\n            {\r\n                "id": "harmonic7",\r\n                "event": "valueChanged",\r\n                "range": {"min": 0, "max": 1, "defaultValue": 0, "skew": 1, "increment": 1}\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        "type": "numberSlider",\r\n        "bounds": {"left": 20, "top": 230, "width": 80, "height": 20},\r\n        "channels": [\r\n            {\r\n                "id": "harmonic8",\r\n                "event": "valueChanged",\r\n                "range": {"min": 0, "max": 1, "defaultValue": 0, "skew": 1, "increment": 1}\r\n            }\r\n        ]\r\n    }\r\n]\r\n</Cabbage>\r\n<CsoundSynthesizer>\r\n<CsOptions>\r\n-n -d\r\n</CsOptions>e\r\n<CsInstruments>\r\n; Initialize the global variables.\r\nksmps = 16\r\nnchnls = 2\r\n0dbfs = 1\r\n\r\n; Rory Walsh 2021\r\n;\r\n; License: CC0 1.0 Universal\r\n; You can copy, modify, and distribute this file,\r\n; even for commercial purposes, all without asking permission.\r\ngiWave  = ftgen(1, 0, 4096, 10, 1, .2, .1, .2, .1)\r\n\r\ninstr 1\r\n\r\n\r\n    a1 = oscili(tonek(cabbageGetValue:k("harmonic1"), 10), 50, giWave)\r\n    a2 = oscili(tonek(cabbageGetValue:k("harmonic2"), 10), 100, giWave)\r\n    a3 = oscili(tonek(cabbageGetValue:k("harmonic3"), 10), 150, giWave)\r\n    a4 = oscili(tonek(cabbageGetValue:k("harmonic4"), 10), 200, giWave)\r\n    a5 = oscili(tonek(cabbageGetValue:k("harmonic5"), 10), 250, giWave)\r\n    a6 = oscili(tonek(cabbageGetValue:k("harmonic6"), 10), 300, giWave)\r\n    a7 = oscili(tonek(cabbageGetValue:k("harmonic7"), 10), 350, giWave)\r\n    a8 = oscili(tonek(cabbageGetValue:k("harmonic8"), 10), 400, giWave)\r\n\r\n\r\n    aMix = a1+a2+a3+a4+a5+a6+a7+a8\r\n    outs(aMix*.1, aMix*.1)\r\nendin\r\n\r\n</CsInstruments>\r\n<CsScore>\r\n;causes Csound to run for about 7000 years...\r\nf0 z\r\n;starts instrument 1 and runs it for a week\r\ni1 0 z\r\n</CsScore>\r\n</CsoundSynthesizer>\r\n',b={},m="NumberSlider",x={id:"cabbage_widgets/numberSlider",title:"NumberSlider",description:"numberSlider allows users to adjust a numeric value by clicking and dragging up or down. This component displays the current value as text and is useful for precise parameter control in a compact space.",source:"@site/docs/cabbage_widgets/numberSlider.mdx",sourceDirName:"cabbage_widgets",slug:"/cabbage_widgets/numberSlider",permalink:"/cabbage3docs/docs/cabbage_widgets/numberSlider",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/numberSlider.mdx",tags:[],version:"current",frontMatter:{}},f={},j=[{value:"Unique Properties",id:"unique-properties",level:3},{value:"Value Text Box",id:"value-text-box",level:4},...h.toc,{value:"Common properties",id:"common-properties",level:3},{value:"Bounds",id:"bounds",level:4},...s.toc,{value:"Channel",id:"channel",level:4},...i.toc,{value:"Value",id:"value",level:4},...o.toc,{value:"Visible",id:"visible",level:4},...d.toc,{value:"Colour",id:"colour",level:4},{value:"Font",id:"font",level:4},...c.toc,{value:"Id",id:"id",level:4},...l.toc,{value:"Automatable",id:"automatable",level:4},...u.toc,{value:"Example",id:"example",level:2}];function w(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"numberslider",children:"NumberSlider"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"numberSlider"})," allows users to adjust a numeric value by clicking and dragging up or down. This component displays the current value as text and is useful for precise parameter control in a compact space."]}),"\n",(0,r.jsx)(t.h1,{id:"list-of-supported-properties",children:"List of supported properties"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"#bounds",children:"Bounds"})," | ",(0,r.jsx)(t.a,{href:"#channel",children:"Channel"})," | ",(0,r.jsx)(t.a,{href:"#value",children:"Value"})," | ",(0,r.jsx)(t.a,{href:"#visible",children:"Visible"})," | ",(0,r.jsx)(t.a,{href:"#colour",children:"Colour"})," | ",(0,r.jsx)(t.a,{href:"#font",children:"Font"})," |",(0,r.jsx)(t.a,{href:"#id",children:"Id"})," |\r\n| ",(0,r.jsx)(t.a,{href:"#value-text-box",children:"Value Text Box"})," | ",(0,r.jsx)(t.a,{href:"#automatable",children:"Automatable"})]}),"\n",(0,r.jsx)(t.h3,{id:"unique-properties",children:"Unique Properties"}),"\n",(0,r.jsx)("a",{id:"value-text-box",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"value-text-box",children:"Value Text Box"}),"\n",(0,r.jsx)(h.default,{}),"\n",(0,r.jsx)(t.h3,{id:"common-properties",children:"Common properties"}),"\n",(0,r.jsx)("a",{id:"bounds",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"bounds",children:"Bounds"}),"\n",(0,r.jsx)(s.default,{}),"\n",(0,r.jsx)("a",{id:"channel",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"channel",children:"Channel"}),"\n",(0,r.jsx)(i.default,{}),"\n",(0,r.jsx)("a",{id:"value",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"value",children:"Value"}),"\n",(0,r.jsx)(o.default,{}),"\n",(0,r.jsx)("a",{id:"visible",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"visible",children:"Visible"}),"\n",(0,r.jsx)(d.default,{}),"\n",(0,r.jsx)("a",{id:"colour",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"colour",children:"Colour"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"colour": {\r\n    "fill": "#222222"\r\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Colour properties can be any valid CSS or HTML color string. They can also accept hexadecimal strings, or RGB / RGBA arrays, where each channel ranges from 0 to 255. For example, ",(0,r.jsx)(t.code,{children:'"colour":{"fill":[0, 0, 255]}'})," or ",(0,r.jsx)(t.code,{children:'"colour":{"fill":"#ff0000"}'}),". The ",(0,r.jsx)(t.code,{children:"fill"})," property sets the background colour of the number slider."]}),"\n",(0,r.jsx)("a",{id:"font",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"font",children:"Font"}),"\n",(0,r.jsx)(c.default,{}),"\n",(0,r.jsx)("a",{id:"id",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"id",children:"Id"}),"\n",(0,r.jsx)(l.default,{}),"\n",(0,r.jsx)("a",{id:"automatable",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"automatable",children:"Automatable"}),"\n",(0,r.jsx)(u.default,{}),"\n",(0,r.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(p.A,{language:"csharp",children:g})]})}function v(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(w,{...e})}):w(e)}},634:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(4848),a=n(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/automatable",title:"automatable",description:"Defaults to 1. Determines if a widget is automatable by a host DAW. Automatable widgets show up as plug-in parameters in the host. Non-automatable widgets can still communicate with Csound but are not accessible by the host. Note that hosts don't allow this parameter to change dynamically. If you change this setting, the plugin will need to be reloaded.",source:"@site/docs/cabbage_widgets/properties/automatable.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/automatable",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/automatable",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/automatable.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"automatable": 1\n'})}),"\n",(0,r.jsx)(t.p,{children:"Defaults to 1. Determines if a widget is automatable by a host DAW. Automatable widgets show up as plug-in parameters in the host. Non-automatable widgets can still communicate with Csound but are not accessible by the host. Note that hosts don't allow this parameter to change dynamically. If you change this setting, the plugin will need to be reloaded."})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},3252:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(4848),a=n(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/bounds",title:"bounds",description:"Integer values that set position and size on screen(in pixels).",source:"@site/docs/cabbage_widgets/properties/bounds.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/bounds",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/bounds",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/bounds.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"bounds": {"left":0, "top":0, "width":100, "height":100}\n'})}),"\n",(0,r.jsx)(t.p,{children:"Integer values that set position and size on screen(in pixels)."})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},7838:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(4848),a=n(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/channel",title:"channel",description:"In Cabbage 3, widgets use an array of channels instead of a single channel string. Each channel object includes an id that defines a unique channel name. Widgets in Cabbage 3 can have any number of channels attached to them. An optional eventType property specifies the type of interaction. A range object can define the minimum, maximum, and default values, along with the skew and step increment.",source:"@site/docs/cabbage_widgets/properties/channel.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/channel",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/channel",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/channel.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const t={blockquote:"blockquote",code:"code",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"channels": [\n                {\n                    "id":"channelName", \n                    "eventType": "valueChanged",\n                    "range": {"min":0, "max":100, "value":0, "skew":1, "incr":0.1}\n                }\n            ]\n'})}),"\n",(0,r.jsx)(t.p,{children:"In Cabbage 3, widgets use an array of channels instead of a single channel string. Each channel object includes an id that defines a unique channel name. Widgets in Cabbage 3 can have any number of channels attached to them. An optional eventType property specifies the type of interaction. A range object can define the minimum, maximum, and default values, along with the skew and step increment."}),"\n",(0,r.jsx)(t.p,{children:"If range is omitted, it defaults to a range from 0 to 1, with increments of 0.001 for widgets that use drag events (e.g., sliders, XY pads) and 1 for widgets that use click or toggle events (e.g., buttons, checkboxes)."}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:"A widget\u2019s top-level id property defines the general communication channel for updating attributes, while the channels specified in the channels array are used for value and parameter updates."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Supported event types:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Event"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"valueChanged (default)"})}),(0,r.jsx)(t.td,{children:"Tracks simple value changes"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"mousePressLeft"})}),(0,r.jsx)(t.td,{children:"Tracks presses of left mouse button"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"mousePressRight"})}),(0,r.jsx)(t.td,{children:"Tracks presses of right mouse button"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"mousePressMiddle"})}),(0,r.jsx)(t.td,{children:"Tracks presses of middle mouse button"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"mouseMoveX"})}),(0,r.jsx)(t.td,{children:"Tracks movement along X axis."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"mouseMoveY"})}),(0,r.jsx)(t.td,{children:"Tracks movement along Y axis."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"mouseDragX"})}),(0,r.jsx)(t.td,{children:"Tracks movement along X axis with mouse pressed"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"mouseDragY"})}),(0,r.jsx)(t.td,{children:"Tracks movement along Y axis with mouse pressed"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"mouseInside"})}),(0,r.jsx)(t.td,{children:"Returns max when any mouse button is within the bounds of the widget, min if outside."})]})]})]}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:"In Cabbage 3, channels don't need to start with a letter, and white spaces are permitted."}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},1584:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(4848),a=n(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/font",title:"font",description:"Sets the font size, family, colour and font alignment of the widget, where applicable.",source:"@site/docs/cabbage_widgets/properties/font.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/font",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/font",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/font.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"font": {\n    "family": "Verdana",\n    "size": 0,\n    "align": "centre",\n    "colour":"#ff0000"\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:"Sets the font size, family, colour and font alignment of the widget, where applicable."})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},576:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(4848),a=n(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/id",title:"id",description:"This optional channel can be used to define a top-level line of communication between the instrument\u2019s UI and Csound. It is reserved for UI updates only. If omitted, it defaults to the first id from the channels array. Its primary purpose is to help produce clearer code, especially for widgets with multiple channels.",source:"@site/docs/cabbage_widgets/properties/id.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/id",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/id",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/id.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"id": "widgetId"\n'})}),"\n",(0,r.jsx)(t.p,{children:"This optional channel can be used to define a top-level line of communication between the instrument\u2019s UI and Csound. It is reserved for UI updates only. If omitted, it defaults to the first id from the channels array. Its primary purpose is to help produce clearer code, especially for widgets with multiple channels."})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},7396:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(4848),a=n(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/value",title:"value",description:"Value sets the initial state of the widget. In the case of a keyboard widget, it sets the leftmost key to appear.",source:"@site/docs/cabbage_widgets/properties/value.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/value",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/value",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/value.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"value":0\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Value sets the initial state of the widget. In the case of a ",(0,r.jsx)(t.code,{children:"keyboard"})," widget, it sets the leftmost key to appear."]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},2882:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(4848),a=n(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/valueTextBox",title:"valueTextBox",description:"When set to 1 this property will cause a text box to appear with the slider's values. The value box can be double-clicked to allow entering of precision values. Hitting enter will send the value to the widget.",source:"@site/docs/cabbage_widgets/properties/valueTextBox.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/valueTextBox",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/valueTextBox",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/valueTextBox.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"valueTextBox": 0\n'})}),"\n",(0,r.jsx)(t.p,{children:"When set to 1 this property will cause a text box to appear with the slider's values. The value box can be double-clicked to allow entering of precision values. Hitting enter will send the value to the widget."})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},2301:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(4848),a=n(8453);const s={},i=void 0,o={id:"cabbage_widgets/properties/visible",title:"visible",description:"A value of 0 will cause the widget to become invisible. Widgets have their visibility set to 1 by default.",source:"@site/docs/cabbage_widgets/properties/visible.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/visible",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/visible",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/visible.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"visible": 1\n'})}),"\n",(0,r.jsx)(t.p,{children:"A value of 0 will cause the widget to become invisible. Widgets have their visibility set to 1 by default."})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);