"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1806],{3722:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>m,contentTitle:()=>b,default:()=>j,frontMatter:()=>u,metadata:()=>g,toc:()=>x});var r=s(4848),a=s(8453),n=s(812),i=s(6596),o=s(7396),d=s(3252),c=s(7838),l=s(2301),h=s(8104),p=s(576);s(1432);const u={},b="Keyboard",g={id:"cabbage_widgets/keyboard",title:"Keyboard",description:"keyboard will display a keyboard that will send MIDI information to your Csound instrument. This component can be used together with a hardware controller. Pressing keys on an actual MIDI keyboard will cause the on-screen keys to light up.",source:"@site/docs/cabbage_widgets/keyboard.mdx",sourceDirName:"cabbage_widgets",slug:"/cabbage_widgets/keyboard",permalink:"/cabbage3docs/docs/cabbage_widgets/keyboard",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/keyboard.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Image",permalink:"/cabbage3docs/docs/cabbage_widgets/image"},next:{title:"Label",permalink:"/cabbage3docs/docs/cabbage_widgets/label"}},m={},x=[{value:"Unique Properties",id:"unique-properties",level:3},{value:"Key Width",id:"key-width",level:4},...i.toc,{value:"Value",id:"value",level:4},...o.toc,{value:"Common Properties",id:"common-properties",level:3},{value:"Bounds",id:"bounds",level:4},...d.toc,{value:"Channel",id:"channel",level:4},...c.toc,{value:"Colour",id:"colour",level:4},...n.toc,{value:"Id",id:"id",level:4},...p.toc,{value:"Visible",id:"visible",level:4},...l.toc,{value:"Opacity",id:"opacity",level:4},...h.toc,{value:"Example",id:"example",level:2}];function f(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"keyboard",children:"Keyboard"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"keyboard"})," will display a keyboard that will send MIDI information to your Csound instrument. This component can be used together with a hardware controller. Pressing keys on an actual MIDI keyboard will cause the on-screen keys to light up."]}),"\n",(0,r.jsx)(t.h1,{id:"list-of-supported-properties",children:"List of supported properties"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"#key-width",children:"Key Width"})," | ",(0,r.jsx)(t.a,{href:"#value",children:"Value"})," | ",(0,r.jsx)(t.a,{href:"#bounds",children:"Bounds"})," | ",(0,r.jsx)(t.a,{href:"#colour",children:"Colour"})," |",(0,r.jsx)(t.a,{href:"#id",children:"Id"})," | ",(0,r.jsx)(t.a,{href:"#opacity",children:"Opacity"})," | ",(0,r.jsx)(t.a,{href:"#channel",children:"Channel"})," | ",(0,r.jsx)(t.a,{href:"#visible",children:"Visible"})," | ",(0,r.jsx)(t.a,{href:"#opacity",children:"Opacity"})]}),"\n",(0,r.jsx)(t.h3,{id:"unique-properties",children:"Unique Properties"}),"\n",(0,r.jsx)("a",{id:"key-width",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"key-width",children:"Key Width"}),"\n",(0,r.jsx)(i.default,{}),"\n",(0,r.jsx)("a",{id:"value",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"value",children:"Value"}),"\n",(0,r.jsx)(o.default,{}),"\n",(0,r.jsx)(t.h3,{id:"common-properties",children:"Common Properties"}),"\n",(0,r.jsx)("a",{id:"bounds",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"bounds",children:"Bounds"}),"\n",(0,r.jsx)(d.default,{}),"\n",(0,r.jsx)("a",{id:"channel",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"channel",children:"Channel"}),"\n",(0,r.jsx)(c.default,{}),"\n",(0,r.jsx)("a",{id:"colour",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"colour",children:"Colour"}),"\n",(0,r.jsx)(n.default,{}),"\n",(0,r.jsx)("a",{id:"id",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"id",children:"Id"}),"\n",(0,r.jsx)(p.default,{}),"\n",(0,r.jsx)("a",{id:"visible",class:"anchor-target"}),"\n",(0,r.jsx)("a",{id:"visible",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"visible",children:"Visible"}),"\n",(0,r.jsx)(l.default,{}),"\n",(0,r.jsx)("a",{id:"opacity",class:"anchor-target"}),"\n",(0,r.jsx)(t.h4,{id:"opacity",children:"Opacity"}),"\n",(0,r.jsx)(h.default,{}),"\n",(0,r.jsx)(t.h2,{id:"example",children:"Example"})]})}function j(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}},3252:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var r=s(4848),a=s(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/bounds",title:"bounds",description:"Integer values that set position and size on screen(in pixels).",source:"@site/docs/cabbage_widgets/properties/bounds.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/bounds",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/bounds",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/bounds.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"bounds": {"left":0, "top":0, "width":100, "height":100}\n'})}),"\n",(0,r.jsx)(t.p,{children:"Integer values that set position and size on screen(in pixels)."})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},7838:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var r=s(4848),a=s(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/channel",title:"channel",description:"In Cabbage 3, widgets use an array of channels instead of a single channel string. Each channel object includes an id that defines a unique channel name. Widgets in Cabbage 3 can have any number of channels attached to them. An optional eventType property specifies the type of interaction. A range object can define the minimum, maximum, and default values, along with the skew and step increment.",source:"@site/docs/cabbage_widgets/properties/channel.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/channel",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/channel",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/channel.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const t={blockquote:"blockquote",code:"code",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"channels": [\n                {\n                    "id":"channelName", \n                    "eventType": "valueChanged",\n                    "range": {"min":0, "max":100, "value":0, "skew":1, "incr":0.1}\n                }\n            ]\n'})}),"\n",(0,r.jsx)(t.p,{children:"In Cabbage 3, widgets use an array of channels instead of a single channel string. Each channel object includes an id that defines a unique channel name. Widgets in Cabbage 3 can have any number of channels attached to them. An optional eventType property specifies the type of interaction. A range object can define the minimum, maximum, and default values, along with the skew and step increment."}),"\n",(0,r.jsx)(t.p,{children:"If range is omitted, it defaults to a range from 0 to 1, with increments of 0.001 for widgets that use drag events (e.g., sliders, XY pads) and 1 for widgets that use click or toggle events (e.g., buttons, checkboxes)."}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:"A widget\u2019s top-level id property defines the general communication channel for updating attributes, while the channels specified in the channels array are used for value and parameter updates."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Supported event types:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Event"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"valueChanged (default)"})}),(0,r.jsx)(t.td,{children:"Tracks simple value changes"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"mousePressLeft"})}),(0,r.jsx)(t.td,{children:"Tracks presses of left mouse button"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"mousePressRight"})}),(0,r.jsx)(t.td,{children:"Tracks presses of right mouse button"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"mousePressMiddle"})}),(0,r.jsx)(t.td,{children:"Tracks presses of middle mouse button"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"mouseMoveX"})}),(0,r.jsx)(t.td,{children:"Tracks movement along X axis."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"mouseMoveY"})}),(0,r.jsx)(t.td,{children:"Tracks movement along Y axis."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"mouseDragX"})}),(0,r.jsx)(t.td,{children:"Tracks movement along X axis with mouse pressed"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"mouseDragY"})}),(0,r.jsx)(t.td,{children:"Tracks movement along Y axis with mouse pressed"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"mouseInside"})}),(0,r.jsx)(t.td,{children:"Returns max when any mouse button is within the bounds of the widget, min if outside."})]})]})]}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsx)(t.p,{children:"In Cabbage 3, channels don't need to start with a letter, and white spaces are permitted."}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},812:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var r=s(4848),a=s(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/colourKeyboard",title:"colourKeyboard",description:'Colour properties can be any valid CSS or HTML color string. They can also accepts be hexadecimal strings, or RGB / RGBA array, where each channel ranges from 0 to 255. For example, "colour"[0, 0, 255]} or "colour"""#ff0000"}. fill sets the table colour, while stroke.outline sets the outline colour.',source:"@site/docs/cabbage_widgets/properties/colourKeyboard.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/colourKeyboard",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/colourKeyboard",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/colourKeyboard.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"colour": {\n    "whiteNote": "#ffffff",\n    "arrowBackground": "#0295cf",\n    "keydown": "#93d200",\n    "blackNote": "#000000"\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Colour properties can be any valid CSS or HTML color string. They can also accepts be hexadecimal strings, or RGB / RGBA array, where each channel ranges from 0 to 255. For example, ",(0,r.jsx)(t.code,{children:'"colour":{"whiteNote":[0, 0, 255]}'})," or ",(0,r.jsx)(t.code,{children:'"colour":{"keydown":""#ff0000"}'}),". ",(0,r.jsx)(t.code,{children:"fill"})," sets the table colour, while ",(0,r.jsx)(t.code,{children:"stroke.outline"})," sets the outline colour."]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},576:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var r=s(4848),a=s(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/id",title:"id",description:"This optional channel can be used to define a top-level line of communication between the instrument\u2019s UI and Csound. It is reserved for UI updates only. If omitted, it defaults to the first id from the channels array. Its primary purpose is to help produce clearer code, especially for widgets with multiple channels.",source:"@site/docs/cabbage_widgets/properties/id.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/id",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/id",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/id.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"id": "widgetId"\n'})}),"\n",(0,r.jsx)(t.p,{children:"This optional channel can be used to define a top-level line of communication between the instrument\u2019s UI and Csound. It is reserved for UI updates only. If omitted, it defaults to the first id from the channels array. Its primary purpose is to help produce clearer code, especially for widgets with multiple channels."})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},6596:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var r=s(4848),a=s(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/keyWidth",title:"keyWidth",description:"Set the width of the keys in pixels.",source:"@site/docs/cabbage_widgets/properties/keyWidth.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/keyWidth",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/keyWidth",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/keyWidth.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"keyWidth": 24\n'})}),"\n",(0,r.jsx)(t.p,{children:"Set the width of the keys in pixels."})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8104:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var r=s(4848),a=s(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/opacity",title:"opacity",description:"The opacity attribute property can vary between 0 (fully transparent) and 1 (fully opaque).",source:"@site/docs/cabbage_widgets/properties/opacity.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/opacity",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/opacity",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/opacity.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"opacity": 1\n'})}),"\n",(0,r.jsx)(t.p,{children:"The opacity attribute property can vary between 0 (fully transparent) and 1 (fully opaque)."})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},7396:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var r=s(4848),a=s(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/value",title:"value",description:"Value sets the initial state of the widget. In the case of a keyboard widget, it sets the leftmost key to appear.",source:"@site/docs/cabbage_widgets/properties/value.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/value",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/value",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/value.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"value":0\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Value sets the initial state of the widget. In the case of a ",(0,r.jsx)(t.code,{children:"keyboard"})," widget, it sets the leftmost key to appear."]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},2301:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var r=s(4848),a=s(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/visible",title:"visible",description:"A value of 0 will cause the widget to become invisible. Widgets have their visibility set to 1 by default.",source:"@site/docs/cabbage_widgets/properties/visible.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/visible",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/visible",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/visible.mdx",tags:[],version:"current",frontMatter:{}},d={},c=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'"visible": 1\n'})}),"\n",(0,r.jsx)(t.p,{children:"A value of 0 will cause the widget to become invisible. Widgets have their visibility set to 1 by default."})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);