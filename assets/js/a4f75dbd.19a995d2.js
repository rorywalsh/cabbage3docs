"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7288],{8791:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>w,contentTitle:()=>m,default:()=>v,frontMatter:()=>b,metadata:()=>f,toc:()=>x});var r=t(4848),s=t(8453),i=t(9225),o=t(2586),a=t(4748),c=t(4564),d=t(4039),l=t(2868),g=t(576),p=t(3927),u=t(1432),h=t(766);const b={},m="Form",f={id:"cabbage_widgets/form",title:"Form",description:"form creates the main application window. pluginId is the only required property, while caption will only be used when running an instrument as a standalone. The default values for size are 600x300. There can only be one form per instrument, and it has the unique channel name of MainForm.",source:"@site/docs/cabbage_widgets/form.mdx",sourceDirName:"cabbage_widgets",slug:"/cabbage_widgets/form",permalink:"/cabbage3docs/docs/cabbage_widgets/form",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/form.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Cabbage Widgets",permalink:"/cabbage3docs/docs/cabbage_widgets/intro"},next:{title:"Button",permalink:"/cabbage3docs/docs/cabbage_widgets/button"}},w={},x=[{value:"Unique Identifiers",id:"unique-identifiers",level:3},{value:"Caption",id:"caption",level:4},...o.toc,{value:"Size",id:"size",level:4},...l.toc,{value:"PluginId",id:"pluginid",level:4},...i.toc,{value:"ChannelConfig",id:"channelconfig",level:4},...a.toc,{value:"EnableDevTools",id:"enabledevtools",level:4},...c.toc,{value:"Logger",id:"logger",level:4},...d.toc,{value:"Common Identifiers",id:"common-identifiers",level:3},{value:"Id",id:"id",level:4},...g.toc,{value:"Colour",id:"colour",level:4},...p.toc,{value:"Example",id:"example",level:2}];function j(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"form",children:"Form"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"form"})," creates the main application window. ",(0,r.jsx)(n.code,{children:"pluginId"})," is the only required property, while ",(0,r.jsx)(n.code,{children:"caption"})," will only be used when running an instrument as a standalone. The default values for size are 600x300. There can only be one form per instrument, and it has the unique channel name of ",(0,r.jsx)(n.code,{children:"MainForm"}),"."]}),"\n",(0,r.jsx)(n.h1,{id:"list-of-supported-properties",children:"List of supported properties"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"#caption",children:"Caption"})," | ",(0,r.jsx)(n.a,{href:"#size",children:"Size"})," |",(0,r.jsx)(n.a,{href:"#id",children:"Id"})," | ",(0,r.jsx)(n.a,{href:"#colour",children:"Colour"})," | ",(0,r.jsx)(n.a,{href:"#channelConfig",children:"ChannelConfig"})," | ",(0,r.jsx)(n.a,{href:"#enableDevTools",children:"EnabledDevTools"})," | ",(0,r.jsx)(n.a,{href:"#logger",children:"Logger"})," | ",(0,r.jsx)(n.a,{href:"#pluginid",children:"PluginId"})]}),"\n",(0,r.jsx)(n.h3,{id:"unique-identifiers",children:"Unique Identifiers"}),"\n",(0,r.jsx)("a",{id:"caption",class:"anchor-target"}),"\n",(0,r.jsx)(n.h4,{id:"caption",children:"Caption"}),"\n",(0,r.jsx)(o.default,{}),"\n",(0,r.jsx)("a",{id:"size",class:"anchor-target"}),"\n",(0,r.jsx)(n.h4,{id:"size",children:"Size"}),"\n",(0,r.jsx)(l.default,{}),"\n",(0,r.jsx)("a",{id:"pluginid",class:"anchor-target"}),"\n",(0,r.jsx)(n.h4,{id:"pluginid",children:"PluginId"}),"\n",(0,r.jsx)(i.default,{}),"\n",(0,r.jsx)("a",{id:"channelConfig",class:"anchor-target"}),"\n",(0,r.jsx)(n.h4,{id:"channelconfig",children:"ChannelConfig"}),"\n",(0,r.jsx)(a.default,{}),"\n",(0,r.jsx)("a",{id:"enableDevTools",class:"anchor-target"}),"\n",(0,r.jsx)(n.h4,{id:"enabledevtools",children:"EnableDevTools"}),"\n",(0,r.jsx)(c.default,{}),"\n",(0,r.jsx)("a",{id:"logger",class:"anchor-target"}),"\n",(0,r.jsx)(n.h4,{id:"logger",children:"Logger"}),"\n",(0,r.jsx)(d.default,{}),"\n",(0,r.jsx)(n.h3,{id:"common-identifiers",children:"Common Identifiers"}),"\n",(0,r.jsx)("a",{id:"id",class:"anchor-target"}),"\n",(0,r.jsx)(n.h4,{id:"id",children:"Id"}),"\n",(0,r.jsx)(g.default,{}),"\n",(0,r.jsx)("a",{id:"colour",class:"anchor-target"}),"\n",(0,r.jsx)(n.h4,{id:"colour",children:"Colour"}),"\n",(0,r.jsx)(p.default,{}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(u.A,{language:"csharp",children:h.A})]})}function v(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(j,{...e})}):j(e)}},2586:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=t(4848),s=t(8453);const i={},o=void 0,a={id:"cabbage_widgets/properties/caption",title:"caption",description:"The string passed to caption will be the string that appears on the main application window.",source:"@site/docs/cabbage_widgets/properties/caption.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/caption",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/caption",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/caption.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const n={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"caption": "string"\n'})}),"\n",(0,r.jsx)(n.p,{children:"The string passed to caption will be the string that appears on the main application window."})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},4748:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=t(4848),s=t(8453);const i={},o=void 0,a={id:"cabbage_widgets/properties/channelConfig",title:"channelConfig",description:'Sets the preferred channel and bus layout. You can add as many configuration strings as you like, e.g., "2-2 2-1 1-1". You can also organise channels into buses by using a \'.\' operator. For example, the following string will group the inputs into a stereo bus, alongside a mono sidechain input: "2.1-2".',source:"@site/docs/cabbage_widgets/properties/channelConfig.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/channelConfig",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/channelConfig",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/channelConfig.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const n={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"channelConfig": "2-2"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Sets the preferred channel and bus layout. You can add as many configuration strings as you like, e.g., ",(0,r.jsx)(n.code,{children:'"2-2 2-1 1-1"'}),". You can also organise channels into buses by using a '.' operator. For example, the following string will group the inputs into a stereo bus, alongside a mono sidechain input: ",(0,r.jsx)(n.code,{children:'"2.1-2"'}),"."]})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},3927:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=t(4848),s=t(8453);const i={},o=void 0,a={id:"cabbage_widgets/properties/colour",title:"colour",description:'Colour properties can be any valid CSS or HTML color string. They can also accepts be hexadecimal strings, or RGB / RGBA array, where each channel ranges from 0 to 255. For example, "colour"[0, 0, 255]} or "colour"""#ff0000"}.',source:"@site/docs/cabbage_widgets/properties/colour.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/colour",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/colour",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/colour.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const n={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"colour": {\n    "fill": "#0295cf",\n    "stroke": {\n        "colour": "#dddddd",\n        "width": 1\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Colour properties can be any valid CSS or HTML color string. They can also accepts be hexadecimal strings, or RGB / RGBA array, where each channel ranges from 0 to 255. For example, ",(0,r.jsx)(n.code,{children:'"colour":{"fill":[0, 0, 255]}'})," or ",(0,r.jsx)(n.code,{children:'"colour":{"fill":""#ff0000"}'}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"stroke"})," object set the outline colour and width for any widget that supports it."]})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},4564:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=t(4848),s=t(8453);const i={},o=void 0,a={id:"cabbage_widgets/properties/enableDevTools",title:"enableDevTools",description:"Enables right-clicking of webview context menu. When this is disabled users will not be able to inspect your UI or access any of the browser dev tools. This is enabled by default.",source:"@site/docs/cabbage_widgets/properties/enableDevTools.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/enableDevTools",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/enableDevTools",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/enableDevTools.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const n={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"enableDevTools": true\n'})}),"\n",(0,r.jsx)(n.p,{children:"Enables right-clicking of webview context menu. When this is disabled users will not be able to inspect your UI or access any of the browser dev tools. This is enabled by default."})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},576:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=t(4848),s=t(8453);const i={},o=void 0,a={id:"cabbage_widgets/properties/id",title:"id",description:"This optional channel can be used to define a top-level line of communication between the instrument\u2019s UI and Csound. It is reserved for UI updates only. If omitted, it defaults to the first id from the channels array. Its primary purpose is to help produce clearer code, especially for widgets with multiple channels.",source:"@site/docs/cabbage_widgets/properties/id.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/id",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/id",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/id.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const n={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"id": "widgetId"\n'})}),"\n",(0,r.jsx)(n.p,{children:"This optional channel can be used to define a top-level line of communication between the instrument\u2019s UI and Csound. It is reserved for UI updates only. If omitted, it defaults to the first id from the channels array. Its primary purpose is to help produce clearer code, especially for widgets with multiple channels."})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},4039:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=t(4848),s=t(8453);const i={},o=void 0,a={id:"cabbage_widgets/properties/logger",title:"logger",description:'Enables file logging when in plugin mode. If "file" is left empty, the log file will default to the same name as the .csd file, but with a .log extension. The "replace" parameter determines whether Cabbage overwrites the log file on successive runs. File logging, along with this log overwriting, is enabled by default.',source:"@site/docs/cabbage_widgets/properties/logger.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/logger",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/logger",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/logger.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const n={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"logger":{\n    "file":"",\n    "replace": true,\n    "enabled": true\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Enables file logging when in plugin mode. If ",(0,r.jsx)(n.code,{children:'"file"'})," is left empty, the log file will default to the same name as the .csd file, but with a .log extension. The ",(0,r.jsx)(n.code,{children:'"replace"'})," parameter determines whether Cabbage overwrites the log file on successive runs. File logging, along with this log overwriting, is enabled by default."]})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},9225:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=t(4848),s=t(8453);const i={},o=void 0,a={id:"cabbage_widgets/properties/pluginId",title:"pluginId",description:"this unique string must be four characters long. It is the ID given to your plugin when loaded by plugin hosts.",source:"@site/docs/cabbage_widgets/properties/pluginId.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/pluginId",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/pluginId",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/pluginId.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const n={blockquote:"blockquote",code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"pluginId": "plug"\n'})}),"\n",(0,r.jsx)(n.p,{children:"this unique string must be four characters long. It is the ID given to your plugin when loaded by plugin hosts."}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Every plugin must have a unique plugin ID. If you experience problems loading two different plugins, it could be because they use the same plugin ID. The plugin ID seems to be more relevant when working with OSX than on Linux or Windows."}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},2868:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=t(4848),s=t(8453);const i={},o=void 0,a={id:"cabbage_widgets/properties/size",title:"size",description:"integer values denoted the width and height of the form.",source:"@site/docs/cabbage_widgets/properties/size.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/size",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/size",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/size.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const n={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"size": {"width":100, "height":100}\n'})}),"\n",(0,r.jsx)(n.p,{children:"integer values denoted the width and height of the form."})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},766:(e,n,t)=>{t.d(n,{A:()=>r});const r='<Cabbage>\r\n[\r\n    {\r\n        "type": "form",\r\n        "caption": "Button Example",\r\n        "size": {"width": 380, "height": 300},\r\n        "guiMode": "queue",\r\n        "pluginId": "def1"\r\n    },\r\n    {\r\n        "type": "checkBox",\r\n        "bounds": {"left": 10, "top": 16, "width": 126, "height": 18},\r\n        "channels": [\r\n            {\r\n                "id": "trigger",\r\n                "event": "valueChanged",\r\n                "range": {"min": 0, "max": 1, "defaultValue": 0, "skew": 1, "increment": 1}\r\n            }\r\n        ],\r\n        "text": "Synth Enabled",\r\n        "corners": 2\r\n    },\r\n    {\r\n        "type": "button",\r\n        "bounds": {"left": 146, "top": 12, "width": 80, "height": 30},\r\n        "channels": [\r\n            {\r\n                "id": "mute",\r\n                "event": "valueChanged",\r\n                "range": {"min": 0, "max": 1, "defaultValue": 0, "skew": 1, "increment": 1}\r\n            }\r\n        ],\r\n        "text": {"off": "Unmute", "on": "Mute"},\r\n        "corners": 2\r\n    },\r\n    {\r\n        "type": "button",\r\n        "bounds": {"left": 240, "top": 12, "width": 121, "height": 30},\r\n        "channels": [\r\n            {\r\n                "id": "toggleFreq",\r\n                "event": "valueChanged",\r\n                "range": {"min": 0, "max": 1, "defaultValue": 0, "skew": 1, "increment": 1}\r\n            }\r\n        ],\r\n        "text": "Toggle Freq"\r\n    }\r\n]\r\n</Cabbage>\r\n<CsoundSynthesizer>\r\n<CsOptions>\r\n-n -d -+rtmidi=NULL -M0 -m0d\r\n</CsOptions>\r\n<CsInstruments>\r\n; Initialize the global variables.\r\nksmps = 32\r\nnchnls = 2\r\n0dbfs = 1\r\n\r\n; Rory Walsh 2021\r\n;\r\n; License: CC0 1.0 Universal\r\n; You can copy, modify, and distribute this file,\r\n; even for commercial purposes, all without asking permission.\r\n\r\ninstr 1\r\n\r\n    kVal, kTrig = cabbageGetValue("trigger")\r\n\r\n    if kTrig == 1 then\r\n        if kVal == 1 then\r\n            event("i", "Synth", 0, 3600)\r\n        else\r\n            iInstrNum = nstrnum("Synth")\r\n            turnoff2(iInstrNum, 0, 0)\r\n        endif\r\n    endif\r\n    \r\nendin\r\n\r\ninstr Synth\r\n    prints("Starting Synth")   \r\n    kMute = cabbageGetValue("mute")\r\n    a1 = oscili(.5*kMute, 300*(cabbageGetValue("toggleFreq")+1))\r\n    outs(a1, a1)\r\nendin\r\n\r\n\r\n\r\n\r\n</CsInstruments>\r\n<CsScore>\r\n;starts instrument 1 and runs it for a week\r\ni1 0 z\r\n</CsScore>\r\n</CsoundSynthesizer>'}}]);