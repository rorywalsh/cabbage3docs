"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[184],{6885:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var s=a(4848),r=a(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/active",title:"active",description:"Will deactivate a control if 0 is passed. Controls which are deactivated can still be updated from Csound.",source:"@site/docs/cabbage_widgets/properties/active.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/active",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/active",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/active.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"active": 0\n'})}),"\n",(0,s.jsx)(t.p,{children:"Will deactivate a control if 0 is passed. Controls which are deactivated can still be updated from Csound."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},634:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var s=a(4848),r=a(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/automatable",title:"automatable",description:"Defaults to 1. Determines if a widget is automatable by a host DAW. Automatable widgets show up as plug-in parameters in the host. Non-automatable widgets can still communicate with Csound but are not accessible by the host. Note that hosts don't allow this parameter to change dynamically. If you change this setting, the plugin will need to be reloaded.",source:"@site/docs/cabbage_widgets/properties/automatable.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/automatable",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/automatable",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/automatable.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"automatable": 1\n'})}),"\n",(0,s.jsx)(t.p,{children:"Defaults to 1. Determines if a widget is automatable by a host DAW. Automatable widgets show up as plug-in parameters in the host. Non-automatable widgets can still communicate with Csound but are not accessible by the host. Note that hosts don't allow this parameter to change dynamically. If you change this setting, the plugin will need to be reloaded."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},6287:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var s=a(4848),r=a(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/ballSize",title:"ballSize",description:"Sets the size (diameter) of the ball in the xyPad widget. The ball represents the current position on the X-Y plane. The default value is 20 pixels. The ball size affects the usable range of the pad - the ball's center is constrained to stay within the pad boundaries, which means larger balls will have their movement range reduced by half the ball size on each edge.",source:"@site/docs/cabbage_widgets/properties/ballSize.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/ballSize",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/ballSize",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/ballSize.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"ballSize": 20\n'})}),"\n",(0,s.jsx)(t.p,{children:"Sets the size (diameter) of the ball in the xyPad widget. The ball represents the current position on the X-Y plane. The default value is 20 pixels. The ball size affects the usable range of the pad - the ball's center is constrained to stay within the pad boundaries, which means larger balls will have their movement range reduced by half the ball size on each edge."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},3252:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var s=a(4848),r=a(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/bounds",title:"bounds",description:"Integer values that set position and size on screen(in pixels).",source:"@site/docs/cabbage_widgets/properties/bounds.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/bounds",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/bounds",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/bounds.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"bounds": {"left":0, "top":0, "width":100, "height":100}\n'})}),"\n",(0,s.jsx)(t.p,{children:"Integer values that set position and size on screen(in pixels)."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},4227:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var s=a(4848),r=a(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/channelXY",title:"channelXY",description:"Defines the channel configuration for the xyPad widget:",source:"@site/docs/cabbage_widgets/properties/channelXY.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/channelXY",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/channelXY",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/channelXY.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"channel": {"id": "xyPad1", "x": "channelX", "y": "channelY"}\n'})}),"\n",(0,s.jsx)(t.p,{children:"Defines the channel configuration for the xyPad widget:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"id"}),": Unique identifier for the xyPad widget itself. Use this channel with ",(0,s.jsx)(t.code,{children:"cabbageSet"})," to update any of the xyPad's attributes."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"x"}),": Channel name for the X-axis value (used with ",(0,s.jsx)(t.code,{children:"cabbageGetValue"})," to retrieve the horizontal position)"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"y"}),": Channel name for the Y-axis value (used with ",(0,s.jsx)(t.code,{children:"cabbageGetValue"})," to retrieve the vertical position)"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Both X and Y channels can be read independently in your Csound code using ",(0,s.jsx)(t.code,{children:"cabbageGetValue"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},3927:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var s=a(4848),r=a(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/colour",title:"colour",description:'Colour properties can be any valid CSS or HTML color string. They can also accepts be hexadecimal strings, or RGB / RGBA array, where each channel ranges from 0 to 255. For example, "colour"[0, 0, 255]} or "colour"""#ff0000"}.',source:"@site/docs/cabbage_widgets/properties/colour.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/colour",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/colour",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/colour.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"colour": {\n    "fill": "#0295cf",\n    "stroke": {\n        "colour": "#dddddd",\n        "width": 1\n    }\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Colour properties can be any valid CSS or HTML color string. They can also accepts be hexadecimal strings, or RGB / RGBA array, where each channel ranges from 0 to 255. For example, ",(0,s.jsx)(t.code,{children:'"colour":{"fill":[0, 0, 255]}'})," or ",(0,s.jsx)(t.code,{children:'"colour":{"fill":""#ff0000"}'}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"stroke"})," object set the outline colour and width for any widget that supports it."]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},5381:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var s=a(4848),r=a(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/corners",title:"corners",description:"Sets the radius size of the widget's corners.",source:"@site/docs/cabbage_widgets/properties/corners.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/corners",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/corners",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/corners.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"corners": 5\n'})}),"\n",(0,s.jsx)(t.p,{children:"Sets the radius size of the widget's corners."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1584:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var s=a(4848),r=a(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/font",title:"font",description:"Sets the font size, family, colour and font alignment of the widget, where applicable.",source:"@site/docs/cabbage_widgets/properties/font.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/font",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/font",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/font.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"font": {\n    "family": "Verdana",\n    "size": 0,\n    "align": "centre",\n    "colour":"#ff0000"\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"Sets the font size, family, colour and font alignment of the widget, where applicable."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},576:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var s=a(4848),r=a(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/id",title:"id",description:"This optional channel can be used to define a top-level line of communication between the instrument\u2019s UI and Csound. It is reserved for UI updates only. If omitted, it defaults to the first id from the channels array. Its primary purpose is to help produce clearer code, especially for widgets with multiple channels.",source:"@site/docs/cabbage_widgets/properties/id.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/id",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/id",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/id.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"id": "widgetId"\n'})}),"\n",(0,s.jsx)(t.p,{children:"This optional channel can be used to define a top-level line of communication between the instrument\u2019s UI and Csound. It is reserved for UI updates only. If omitted, it defaults to the first id from the channels array. Its primary purpose is to help produce clearer code, especially for widgets with multiple channels."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8104:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var s=a(4848),r=a(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/opacity",title:"opacity",description:"The opacity attribute property can vary between 0 (fully transparent) and 1 (fully opaque).",source:"@site/docs/cabbage_widgets/properties/opacity.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/opacity",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/opacity",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/opacity.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"opacity": 1\n'})}),"\n",(0,s.jsx)(t.p,{children:"The opacity attribute property can vary between 0 (fully transparent) and 1 (fully opaque)."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},7085:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var s=a(4848),r=a(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/popup",title:"popup",description:"This property will set whether a slider's popup value box will appear. It's enabled by default.",source:"@site/docs/cabbage_widgets/properties/popup.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/popup",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/popup",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/popup.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"popup": 1\n'})}),"\n",(0,s.jsx)(t.p,{children:"This property will set whether a slider's popup value box will appear. It's enabled by default."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},437:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var s=a(4848),r=a(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/rangeXY",title:"rangeXY",description:"Defines the ranges for both X and Y axes of the xyPad. Each axis has its own independent range with the following parameters:",source:"@site/docs/cabbage_widgets/properties/rangeXY.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/rangeXY",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/rangeXY",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/rangeXY.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={blockquote:"blockquote",code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"range": {\n    "x": {"min": 0, "max": 100, "defaultValue": 50, "skew": 1, "increment": 0.1},\n    "y": {"min": 0, "max": 100, "defaultValue": 50, "skew": 1, "increment": 0.1}\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"Defines the ranges for both X and Y axes of the xyPad. Each axis has its own independent range with the following parameters:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"min"}),": Minimum value (required)"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"max"}),": Maximum value (required)"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"defaultValue"}),": Initial value (optional, defaults to min)"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"skew"}),": Skew factor for non-linear scaling (optional, default is 1 for linear). A value of 0.5 creates exponential scaling"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"increment"}),": Step size for value changes (optional, default is 0.001)"]}),"\n"]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"range()"})," cannot be updated or modified once a widget has been declared."]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},3919:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var s=a(4848),r=a(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/textXY",title:"textXY",description:"Sets the text labels for the X and Y axes of the xyPad. Each axis can have its own label displayed in the value boxes at the bottom of the widget. If the labels contain separators like /, |, or \\, they will be automatically split during conversion from Cabbage2 format.",source:"@site/docs/cabbage_widgets/properties/textXY.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/textXY",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/textXY",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/textXY.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"text": {"x": "X Label", "y": "Y Label"}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Sets the text labels for the X and Y axes of the xyPad. Each axis can have its own label displayed in the value boxes at the bottom of the widget. If the labels contain separators like ",(0,s.jsx)(t.code,{children:"/"}),", ",(0,s.jsx)(t.code,{children:"|"}),", or ",(0,s.jsx)(t.code,{children:"\\"}),", they will be automatically split during conversion from Cabbage2 format."]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},2301:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var s=a(4848),r=a(8453);const n={},i=void 0,o={id:"cabbage_widgets/properties/visible",title:"visible",description:"A value of 0 will cause the widget to become invisible. Widgets have their visibility set to 1 by default.",source:"@site/docs/cabbage_widgets/properties/visible.mdx",sourceDirName:"cabbage_widgets/properties",slug:"/cabbage_widgets/properties/visible",permalink:"/cabbage3docs/docs/cabbage_widgets/properties/visible",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/properties/visible.mdx",tags:[],version:"current",frontMatter:{}},c={},d=[];function l(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'"visible": 1\n'})}),"\n",(0,s.jsx)(t.p,{children:"A value of 0 will cause the widget to become invisible. Widgets have their visibility set to 1 by default."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},4317:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>k,contentTitle:()=>y,default:()=>R,frontMatter:()=>v,metadata:()=>_,toc:()=>C});var s=a(4848),r=a(8453),n=a(1584),i=a(4227),o=a(634),c=a(3927),d=a(8104),l=a(3252),p=a(2301),h=a(6885),u=a(5381),g=a(3919),b=a(576),m=a(437),x=a(6287),f=a(7085),w=(a(6540),a(1432));const j='<Cabbage>\r\nform caption("XyPad Test") size(400, 400), guiMode("queue") pluginId("test")\r\nxyPad bounds(20, 20, 350, 350) channel("cf", "bw"), rangex(100, 10000, 1000, 1, 0.001), rangey(0, 1, 0.5, 1, 0.001), text("Freq", "BW")\r\n</Cabbage>\r\n<CsoundSynthesizer>\r\n<CsOptions>\r\n-n -d -+rtmidi=NULL -M0 --midi-key=4 --midi-velocity-amp=5\r\n</CsOptions>\r\n<CsInstruments>\r\n; Initialize the global variables. \r\nksmps = 32\r\nnchnls = 2\r\n0dbfs = 1\r\n\r\ninstr 1\r\n    kFreq chnget "cf"\r\n    kBW chnget "bw"\r\n    \r\n    printks "Freq: %f, BW: %f\\n", 0.5, kFreq, kBW\r\n    \r\n    aOut oscili 0.2, kFreq\r\n    outs aOut, aOut\r\nendin\r\n\r\n</CsInstruments>\r\n<CsScore>\r\ni1 0 [60*60*24*7]\r\n</CsScore>\r\n</CsoundSynthesizer>\r\n',v={},y="XY Pad",_={id:"cabbage_widgets/xyPad",title:"XY Pad",description:"xyPad creates a 2-dimensional X-Y pad controller that allows simultaneous control of two parameters. A draggable ball represents the current position, with independent channels for X and Y axes. The widget features dynamic crosshairs that follow the ball position, value displays for both axes, and customizable ranges with support for non-linear (skewed) scaling. This is ideal for controlling paired parameters like cutoff frequency and resonance, pan and reverb amount, or any two related audio parameters.",source:"@site/docs/cabbage_widgets/xyPad.mdx",sourceDirName:"cabbage_widgets",slug:"/cabbage_widgets/xyPad",permalink:"/cabbage3docs/docs/cabbage_widgets/xyPad",draft:!1,unlisted:!1,editUrl:"https://github.com/rorywalsh/cabbage3docs/tree/main/docs/cabbage_widgets/xyPad.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"RotarySlider",permalink:"/cabbage3docs/docs/cabbage_widgets/rotarySlider"},next:{title:"Custom User Interfaces",permalink:"/cabbage3docs/docs/customUIs"}},k={},C=[{value:"Common Properties",id:"common-properties",level:3},{value:"Active",id:"active",level:4},...h.toc,{value:"Automatable",id:"automatable",level:4},...o.toc,{value:"BallSize",id:"ballsize",level:4},...x.toc,{value:"Bounds",id:"bounds",level:4},...l.toc,{value:"Channel",id:"channel",level:4},...i.toc,{value:"Colour",id:"colour",level:4},...c.toc,{value:"Corners",id:"corners",level:4},...u.toc,{value:"Font",id:"font",level:4},...n.toc,{value:"Id",id:"id",level:4},...b.toc,{value:"Opacity",id:"opacity",level:4},...d.toc,{value:"Popup",id:"popup",level:4},...f.toc,{value:"Range",id:"range",level:4},...m.toc,{value:"Text",id:"text",level:4},...g.toc,{value:"Visible",id:"visible",level:4},...p.toc,{value:"Example",id:"example",level:2}];function T(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"xy-pad",children:"XY Pad"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"xyPad"})," creates a 2-dimensional X-Y pad controller that allows simultaneous control of two parameters. A draggable ball represents the current position, with independent channels for X and Y axes. The widget features dynamic crosshairs that follow the ball position, value displays for both axes, and customizable ranges with support for non-linear (skewed) scaling. This is ideal for controlling paired parameters like cutoff frequency and resonance, pan and reverb amount, or any two related audio parameters."]}),"\n",(0,s.jsx)(t.p,{children:"In Cabbage 2, if you slung the ball across the XY pad, parameter updates would continue even after the UI was closed. In Cabbage 3, this behavior has changed: once the UI is closed, parameter updates stop, and the value remains fixed until the UI is reopened."}),"\n",(0,s.jsx)(t.h1,{id:"list-of-supported-properties",children:"List of supported properties"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"#active",children:"Active"})," | ",(0,s.jsx)(t.a,{href:"#automatable",children:"Automatable"})," | ",(0,s.jsx)(t.a,{href:"#ballsize",children:"BallSize"})," | ",(0,s.jsx)(t.a,{href:"#bounds",children:"Bounds"})," | ",(0,s.jsx)(t.a,{href:"#channel",children:"Channel"})," | ",(0,s.jsx)(t.a,{href:"#colour",children:"Colour"})," | ",(0,s.jsx)(t.a,{href:"#corners",children:"Corners"})," | ",(0,s.jsx)(t.a,{href:"#font",children:"Font"})," |",(0,s.jsx)(t.a,{href:"#id",children:"Id"})," | ",(0,s.jsx)(t.a,{href:"#opacity",children:"Opacity"})," | ",(0,s.jsx)(t.a,{href:"#popup",children:"Popup"})," | ",(0,s.jsx)(t.a,{href:"#range",children:"Range"})," | ",(0,s.jsx)(t.a,{href:"#text",children:"Text"})," | ",(0,s.jsx)(t.a,{href:"#visible",children:"Visible"})]}),"\n",(0,s.jsx)(t.h3,{id:"common-properties",children:"Common Properties"}),"\n",(0,s.jsx)("a",{id:"active",class:"anchor-target"}),"\n",(0,s.jsx)(t.h4,{id:"active",children:"Active"}),"\n",(0,s.jsx)(h.default,{}),"\n",(0,s.jsx)("a",{id:"automatable",class:"anchor-target"}),"\n",(0,s.jsx)(t.h4,{id:"automatable",children:"Automatable"}),"\n",(0,s.jsx)(o.default,{}),"\n",(0,s.jsx)("a",{id:"ballsize",class:"anchor-target"}),"\n",(0,s.jsx)(t.h4,{id:"ballsize",children:"BallSize"}),"\n",(0,s.jsx)(x.default,{}),"\n",(0,s.jsx)("a",{id:"bounds",class:"anchor-target"}),"\n",(0,s.jsx)(t.h4,{id:"bounds",children:"Bounds"}),"\n",(0,s.jsx)(l.default,{}),"\n",(0,s.jsx)("a",{id:"channel",class:"anchor-target"}),"\n",(0,s.jsx)(t.h4,{id:"channel",children:"Channel"}),"\n",(0,s.jsx)(i.default,{}),"\n",(0,s.jsx)("a",{id:"colour",class:"anchor-target"}),"\n",(0,s.jsx)(t.h4,{id:"colour",children:"Colour"}),"\n",(0,s.jsx)(c.default,{}),"\n",(0,s.jsx)("a",{id:"corners",class:"anchor-target"}),"\n",(0,s.jsx)(t.h4,{id:"corners",children:"Corners"}),"\n",(0,s.jsx)(u.default,{}),"\n",(0,s.jsx)("a",{id:"font",class:"anchor-target"}),"\n",(0,s.jsx)(t.h4,{id:"font",children:"Font"}),"\n",(0,s.jsx)(n.default,{}),"\n",(0,s.jsx)("a",{id:"id",class:"anchor-target"}),"\n",(0,s.jsx)(t.h4,{id:"id",children:"Id"}),"\n",(0,s.jsx)(b.default,{}),"\n",(0,s.jsx)("a",{id:"opacity",class:"anchor-target"}),"\n",(0,s.jsx)(t.h4,{id:"opacity",children:"Opacity"}),"\n",(0,s.jsx)(d.default,{}),"\n",(0,s.jsx)("a",{id:"popup",class:"anchor-target"}),"\n",(0,s.jsx)(t.h4,{id:"popup",children:"Popup"}),"\n",(0,s.jsx)(f.default,{}),"\n",(0,s.jsx)("a",{id:"range",class:"anchor-target"}),"\n",(0,s.jsx)(t.h4,{id:"range",children:"Range"}),"\n",(0,s.jsx)(m.default,{}),"\n",(0,s.jsx)("a",{id:"text",class:"anchor-target"}),"\n",(0,s.jsx)(t.h4,{id:"text",children:"Text"}),"\n",(0,s.jsx)(g.default,{}),"\n",(0,s.jsx)("a",{id:"visible",class:"anchor-target"}),"\n",(0,s.jsx)(t.h4,{id:"visible",children:"Visible"}),"\n",(0,s.jsx)(p.default,{}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(w.A,{language:"csharp",children:j})]})}function R(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(T,{...e})}):T(e)}}}]);